name: Build and Deploy App

on:
  workflow_dispatch:
    inputs:
      app-name:
        description: 'The full name of the app to build and deploy (e.g., "apps-accounting")'
        required: true
        default: 'apps-accounting'

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: Sprint18
          fetch-depth: 0

      - name: Run Common Setup (Elevated)
        # Use the 'run' keyword with a script block for elevated privileges
        run: |
          # This entire script block will run with elevated privileges
          Elevated {
            # Call the ./.github/actions/common-setup action here (assuming it's a local action)
            & ./.github/actions/common-setup.ps1 -NodeVersion '18'
          }

      - name: Set App Name
        shell: PowerShell
        run: |
          $env:APP_NAME = ${{ github.event.inputs.app-name }}

      - name: Build App
        shell: PowerShell
        run: |
          ng build $APP_NAME --configuration production --project=$APP_NAME

      - name: Create Destination Directory
        shell: PowerShell
        run: |
          New-Item -ItemType Directory -Path "D:\front\$APP_NAME" -Force

      - name: Copy output to D:\front
        shell: PowerShell
        run: |
          xcopy /s /y dist\$APP_NAME\* D:\front\dist\$APP_NAME\
          Write-Host "Apps $APP_NAME Deployment successful!"

      - name: Stop IIS Website
        shell: PowerShell
        run: |
          Import-Module WebAdministration
          if (Get-Website -Name $APP_NAME) {
            Stop-WebSite -Name $APP_NAME -ErrorAction Stop
            Write-Host "$APP_NAME website stopped"
          } else {
            Write-Host "Website $APP_NAME not found"
          }

      - name: Copy files to IIS Directory
        shell: PowerShell
        run: |
          xcopy /s /y D:\front\dist\$APP_NAME\* C:\inetpub\wwwroot\$APP_NAME\
          Write-Host "Files copied to IIS directory"

      - name: Start IIS Website
        shell: PowerShell
        run: |
          Import-Module WebAdministration
          Start-WebSite -Name $APP_NAME -ErrorAction Stop
          Write-Host "$APP_NAME website started"
