name: Build and Deploy App

on:
  workflow_dispatch:
    inputs:
      app-name:
        description: 'The full name of the app to build and deploy (e.g., "apps-accounting")'
        required: true
        default: 'apps-accounting'

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: Sprint18
          fetch-depth: 0

      - name: Run Common Setup (Elevated)
        run: |
          Start-Process powershell -ArgumentList '-NoProfile -ExecutionPolicy Bypass -File ./.github/actions/common-setup.ps1 -NodeVersion "18"' -Verb RunAs
          
      - name: Set App Name
        shell: PowerShell
        run: |
          $env:APP_NAME = "${{ github.event.inputs.app-name }}"
          Write-Host "App Name: $env:APP_NAME"  # Debugging the app name value

      - name: Build App
        shell: PowerShell
        run: |
          Write-Host "Building app: $env:APP_NAME"  # Debugging before build
          ng build $env:APP_NAME --configuration production --project=$env:APP_NAME
          Write-Host "Build completed for $env:APP_NAME"

      - name: Create Destination Directory
        shell: PowerShell
        run: |
          New-Item -ItemType Directory -Path "D:\front\$env:APP_NAME" -Force

      - name: Copy output to D:\front
        shell: PowerShell
        run: |
          xcopy /s /y dist\$env:APP_NAME\* D:\front\dist\$env:APP_NAME\
          Write-Host "Apps $env:APP_NAME Deployment successful!"

      - name: Stop IIS Website
        shell: PowerShell
        run: |
          Import-Module WebAdministration
          if (Get-Website -Name $env:APP_NAME) {
            Stop-WebSite -Name $env:APP_NAME -ErrorAction Stop
            Write-Host "$env:APP_NAME website stopped"
          } else {
            Write-Host "Website $env:APP_NAME not found"
          }

      - name: Copy files to IIS Directory
        shell: PowerShell
        run: |
          xcopy /s /y D:\front\dist\$env:APP_NAME\* C:\inetpub\wwwroot\$env:APP_NAME\
          Write-Host "Files copied to IIS directory"

      - name: Start IIS Website
        shell: PowerShell
        run: |
          Import-Module WebAdministration
          Start-WebSite -Name $env:APP_NAME -ErrorAction Stop
          Write-Host "$env:APP_NAME website started"
